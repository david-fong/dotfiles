#!/bin/sh
# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-"${HOME}/.config"}"
export   XDG_DATA_HOME="${XDG_DATA_HOME:-"${HOME}/.local/share"}"
export  XDG_STATE_HOME="${XDG_STATE_HOME:-"${HOME}/.local/state"}"
export  XDG_CACHE_HOME="${XDG_CACHE_HOME:-"${HOME}/.cache"}"
# uncomment for windows
#export XDG_CONFIG_HOME="$(cygpath "${XDG_CONFIG_HOME:-"${HOME}/.config"}")"
#export   XDG_DATA_HOME="$(cygpath   "${XDG_DATA_HOME:-"${HOME}/.local/share"}")"
#export  XDG_STATE_HOME="$(cygpath  "${XDG_STATE_HOME:-"${HOME}/.local/state"}")"
#export  XDG_CACHE_HOME="$(cygpath  "${XDG_CACHE_HOME:-"${HOME}/.cache"}")"
mkdir -p "${XDG_CONFIG_HOME}"
mkdir -p "${XDG_DATA_HOME}"
mkdir -p "${XDG_STATE_HOME}"
mkdir -p "${XDG_CACHE_HOME}"

. "${XDG_CONFIG_HOME}/bash/xdg_compat.sh"

#[ -x /bin/setxkbmap ] && setxkbmap -option ctrl:nocaps
#gsettings set org.gnome.desktop.input-sources xkb-options "['caps:ctrl_modifier', 'lv3:ralt_alt']"

# # https://askubuntu.com/q/147462
if [ "$TERM" = "linux" ]; then
	echo -en "\e]P000181E" #black
	echo -en "\e]P1DC322F" #darkred
	echo -en "\e]P2859900" #darkgreen
	echo -en "\e]P3B58900" #brown
	echo -en "\e]P4268BD2" #darkblue
	echo -en "\e]P5D33682" #darkmagenta
	echo -en "\e]P62AA198" #darkcyan
	echo -en "\e]P7EEE8D5" #lightgrey
	echo -en "\e]P8486870" #darkgrey
	echo -en "\e]P9CB4B16" #red
	echo -en "\e]PA98E34D" #green
	echo -en "\e]PBFFD75F" #yellow
	echo -en "\e]PC7373C9" #blue
	echo -en "\e]PD6C71C4" #magenta
	echo -en "\e]PE44C9C9" #cyan
	echo -en "\e]PFFDF6E3" #white
	clear #for background artifacting
fi

export EDITOR='vim'

# less command behaviour:
# +X : enable startup termcap
# -F : (not used) print to console if 1 page
# -q : medium-quiet
# -R : interpret escape-sequences
# -J : show status-column
# -N : show line numbers (off)
# -M : use long prompt
# -x3: use <N> as tabstop
# -#6: use <N> as the horizontal scroll amount
# -S : chop long lines
export LESS='-+X -+F -qRJM -x3 -#6 -S'
[ -x "$(command -v lesspipe)" ] && eval "$(SHELL=/bin/sh lesspipe)"

# if running bash...
if [ -n "$BASH_VERSION" ]; then
	[ -f "${XDG_CONFIG_HOME}/bash/main.sh" ] && source "${XDG_CONFIG_HOME}/bash/main.sh"
fi

if [ -d "$HOME/c/tool/emsdk" ]; then
	# VS Code's sourcing of startup files doesn't pick up the login-shell-only section :/
	export EMSDK="$HOME/c/tool/emsdk"
fi

is_login=$(expr $0 : -)
if [ $is_login = 1 ]; then
	unset is_login
	if [ -d "$HOME/bin" ]; then
		PATH="$HOME/bin:$PATH"
	fi
	if [ -d "$HOME/.local/bin" ]; then
		PATH="$HOME/.local/bin:$PATH"
	fi
	# https://github.com/emscripten-core/emscripten/issues/4848#issuecomment-1097357775
	#. ".../emsdk/emsdk_env.sh"
	if [ -d "$HOME/c/tool/emsdk" ]; then
		PATH+=":$EMSDK:$EMSDK/upstream/emscripten"
	fi
fi

# This could be useful on windows in `~/.bash_logout`:
# if [[ "$SHLVL" = 1 ]]
# then
#     taskkill //F //T //IM "ssh-agent.exe"
#     taskkill //F //T //IM "gpg-agent.exe"
# fi
